% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jambio-design.R
\name{groups2contrasts}
\alias{groups2contrasts}
\title{Define experimental contrasts from sample groups}
\usage{
groups2contrasts(iFactors, groupColumns = NULL, iSamples = NULL,
  iDesign = NULL, factorOrder = NULL, omitGrep = "[-,]",
  maxDepth = 2, currentDepth = 1, factorSep = "_",
  contrastSep = "-", renameFirstDepth = TRUE, returnDesign = FALSE,
  removePairs = NULL, makeUnique = TRUE, addContrastNamesDF = NULL,
  preControlTerms = NULL, verbose = FALSE, ...)
}
\arguments{
\item{iFactors}{vector of sample groups with one entry per sample,
or data.frame whose colnames are experimental factors, and rows
are samples.}

\item{groupColumns}{character vector or NULL, to define an optional
subset of colnames when \code{iFactors} is a data.frame.}

\item{iSamples}{character vector or NULL, optionally used to subset
the sample identifiers used in subsequent steps. Note that only
groups and contrasts that contain samples will be defined.}

\item{iDesign}{optional numeric design matrix, an optional method of
defining sample-to-group mapping.}

\item{factorOrder}{integer vector, optionally used to define the
order of factor contrasts when there are multiple experimental
factors. It can be helpful to force a secondary factor to be
compared before a primary factor especially in two-way contrasts.}

\item{omitGrep}{character grep pattern used to exclude secondary
factors from contrasts, mainly used internally by this function.}

\item{maxDepth}{integer value, the maximum number of factor "depth"
to define contrasts, for example \code{maxDepth=2} will define two-way
contrasts, \code{maxDepth=1} will only define one-way contrasts.}

\item{currentDepth}{integer value used internally by \code{groups2contrasts()}
for iterative operations.}

\item{factorSep, contrastSep}{character values used as delimiter in
factor and contrast names, respectively.}

\item{renameFirstDepth}{logical used internally for iterative calls
to \code{groups2contrasts()}.}

\item{returnDesign}{logical indicating whether to return the full
set of design (\code{iDesign}), contrast (\code{iContrasts}) matrices,
in addition to the \code{contrastNames} data.frame.}

\item{removePairs}{list of pairwise vectors of factors which should
not be compared, or NULL to include all comparisons.}

\item{makeUnique}{logical indicating whether to make output
contrasts unique.}

\item{addContrastNamesDF}{data.frame or NULL, optionally used to append
to the calculated \code{contrastNames} data.frame, useful to add custom
contrasts.}

\item{preControlTerms}{character vector or NULL, optionally used to
help define factor order, for example \code{preControlTerms=c("WT")} would
help order \code{"WT"} before \code{"KO"} when defining control factor levels,
so the resulting contrasts would become \code{"KO-WT"}. This vector should
contain the factor levels that should be used as the preferred
control term in each contrast, where the earlier terms are preferred.}

\item{verbose}{logical indicating whether to print verbose output.}

\item{...}{additional arguments are ignored.}
}
\value{
list of data matrices: \code{iDesign} numeric design matrix;
\code{iContrasts} numeric contrast matrix; \code{contrastNames} data.frame
showing the full factor breakdown, with colnames "contrastName"
which shows a text contrast suitable for use in \code{limma::makeContrasts()}.
When \code{returnDesign=FALSE} the output is only the \code{contrastNames}
data.frame.
}
\description{
Define experimental contrasts from sample groups
}
\details{
This function is intended to define statistical contrasts
that compare one factor at a time. For two-factor designs,
it will create two-way contrasts, defined as the contrast
of pairwise contrasts.
}
\examples{
# first define a vector of sample groups
iGroups <- jamba::nameVector(paste(rep(c("WT", "KO"), each=6),
   rep(c("Control", "Treated"), each=3),
   sep="_"));
iGroups <- factor(iGroups, levels=unique(iGroups));
iGroups;

iDesignL <- groups2contrasts(iGroups, returnDesign=TRUE);
iDesignL$iDesign;
iDesignL$iContrasts;

# now you can visualize the samples used in each contrast
iDesignL$iDesign \%*\%  iDesignL$iContrasts;

# you can adjust the order of factor levels per comparison
groups2contrasts(as.character(iGroups))$contrastName

groups2contrasts(as.character(iGroups), preControlTerms=c("WT"), factorOrder=2:1)$contrastName

}
\seealso{
Other jam RNA-seq functions: \code{\link{ale2violin}},
  \code{\link{assignGRLexonNames}},
  \code{\link{closestExonToJunctions}},
  \code{\link{codonUsage2df}},
  \code{\link{combineGRcoverage}},
  \code{\link{compressPolygonM}},
  \code{\link{defineDetectedTx}},
  \code{\link{detectedTxInfo}}, \code{\link{dna2codon}},
  \code{\link{exoncov2polygon}},
  \code{\link{flattenExonsByGene}}, \code{\link{jamCai}},
  \code{\link{makeTx2geneFromGtf}},
  \code{\link{make_ref2compressed}},
  \code{\link{runDiffSplice}}, \code{\link{sortSamples}},
  \code{\link{spliceGR2junctionDF}}, \code{\link{tx2ale}}

Other jam design functions: \code{\link{curateDFtoDF}},
  \code{\link{curateVtoDF}}
}
\concept{jam RNA-seq functions}
\concept{jam design functions}
