% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jambio-tx.R
\name{flattenExonsBy}
\alias{flattenExonsBy}
\title{Flatten exons by gene or transcript}
\usage{
flattenExonsBy(exonsByTx, tx2geneDF, by = c("gene", "tx"),
  detectedTx = NULL, genes = NULL, txColname = "transcript_id",
  geneColname = "gene_name", cdsByTx = NULL, cdsByGene = NULL,
  verbose = FALSE)
}
\arguments{
\item{exonsByTx}{GRangesList named by transcript, containing one or
more GRanges representing exons. This data is often produced
from \code{TxDb} data using \code{GenomicFeatures::exonsBy(...,by="tx")}.}

\item{tx2geneDF}{data.frame containing at least two columns with
transcript and gene annotation, whose colnames are defined by
arguments \code{txColname} and \code{geneColname} respectively. When
using a GTF file, \code{makeTx2geneFromGtf()} can be used to
create a \code{tx2geneDF} in \code{data.frame} format.}

\item{by}{character string to group exons, \code{"gene"} groups multiple
transcripts per gene, and \code{"tx"} groups exons per transcript.
Note that in both cases, it combines \code{exonsByTx} and \code{cdsByTx}
when \code{cdsByTx} is also supplied.}

\item{detectedTx}{character vector of detected transcripts, used to
subset the overall transcripts prior to producing a flattened gene
exon model.}

\item{genes}{optional character vector, representing a subset of
genes for which flattened exons will be prepared. This argument
is useful when focusing on only one or a subset of genes.}

\item{txColname}{character string indicating a column from
\code{colnames(tx2geneDF)} used to identify transcripts.}

\item{geneColname}{character string indicating a column from
\code{colnames(tx2geneDF)} used to identify gene name, or gene symbol.}

\item{cdsByTx}{\code{GRangesList} named by transcript, containing \code{GRanges}
exons that only include CDS regions. This data is often produced
from \code{TxDb} data using \code{GenomicFeatures::cdsBy(...,by="tx")}.}

\item{cdsByGene}{\code{GRangesList} named by gene, containing \code{GRanges}
exons that only include CDS regions. This data is often produced
from \code{TxDb} data using \code{GenomicFeatures::cdsBy(...,by="gene")}.
Note this input is only used when \code{by="gene"}.}

\item{verbose}{logical indicating whether to print verbose output.}
}
\value{
GRangesList named by gene when \code{by="gene"} or transcript when
\code{by="tx"}, containing non-overlapping GRanges with exon names
as described above.
}
\description{
Flatten exons by gene or transcript
}
\details{
This function takes as input:
\itemize{
\item \code{exonsByTx} as a \code{GRangesList} object
of transcript exons named by the \code{transcript_id},
\item \code{tx2geneDF} a \code{data.frame} with transcript-gene cross-reference,
\item \code{detectedTx} an optional character vector of \code{transcript_id}
values, used to subset the overall transcripts
\item \code{cdsByTx} an optional \code{GRangesList} object, similar to \code{exonsByTx}
except that it only contains the CDS portion of exons
}

This function groups exons together by gene, producing a flattened,
disjoint (non-overlapping) set of exons, where exons are subdivided
when there are multiple boundaries.

Finally, it labels each exon using a defined naming scheme:
\itemize{
\item Each contiguous exon is numbered in order, starting at \code{1} for the
first stranded exon for the gene, for example \code{exon1}, \code{exon2},
\code{exon3}.
\item When an exon is sub-divided, each section is labeled with
an alphabetic suffix to indicate the order within that exon,
for example \code{exon1a}, \code{exon1b}, \code{exon1c}.
}

A text schematic is shown below:

\code{|=======|======|......|=======|.....|=======|=======|=======|}

\code{|.exon1a|exon1b|......|.exon2.|.....|.exon3a|.exon3b|.exon3c|}

Where
\itemize{
\item \code{|====|} represents an exon,
\item \code{|====|====|} represents one contiguous exon with two
sub-divided parts, and
\item \code{.....} represents an intron.
}

It is recommended but not required to supply \code{detectedTx},
since it can greatly reduce the total number of transcripts.
This step has two benefits: It can greatly simplify the
resulting exon model based upon observed data, and it
has the by-product of removing potentially erroneous
transcripts which often has no supporting observed data.
}
\seealso{
Other jam RNA-seq functions: \code{\link{assignGRLexonNames}},
  \code{\link{closestExonToJunctions}},
  \code{\link{combineGRcoverage}},
  \code{\link{defineDetectedTx}},
  \code{\link{detectedTxInfo}},
  \code{\link{exoncov2polygon}},
  \code{\link{groups2contrasts}},
  \code{\link{makeTx2geneFromGtf}},
  \code{\link{make_ref2compressed}},
  \code{\link{runDiffSplice}}, \code{\link{sortSamples}},
  \code{\link{spliceGR2junctionDF}}
}
\concept{GRanges functions}
\concept{jam RNA-seq functions}
