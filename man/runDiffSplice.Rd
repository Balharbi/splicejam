% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jambio-tx.R
\name{runDiffSplice}
\alias{runDiffSplice}
\title{Perform differential isoform analysis using diffSplice}
\usage{
runDiffSplice(iMatrixTx, detectedTx = rownames(iMatrixTx), tx2geneDF,
  txColname = "transcript_id", geneColname = "gene_name", iDesign,
  iContrasts, cutoffFDR = 0.05, cutoffFold = 1.5,
  collapseByGene = TRUE, spliceTest = c("t", "simes", "F"),
  sep = " ", useVoom = TRUE, verbose = FALSE, ...)
}
\arguments{
\item{iMatrixTx}{numeric matrix of expression, with transcripts as
rows and samples as columns. The data is assumed to be log2-transformed
using the format \code{log2(1 + x)}. This data should be normalized using
appropriate methods, outside the scope of this function.}

\item{detectedTx}{character vector containing all or a subset of
\code{rownames(iMatrix)} used for statistical testing.}

\item{tx2geneDF}{data.frame with colnames \code{c(txColname, geneColname)},
where all entries of \code{rownames(iMatrix)} are represented
in \code{tx2geneDF[,txColname]}.}

\item{txColname, geneColname}{the \code{colnames(tx2geneDF)} representing
the \code{rownames(iMatrixTx)} matched by \code{tx2geneDF[,txColname]},
and the associated genes given by \code{tx2geneDF[,geneColname]}.
Note that \code{detectedTx} must also contain values in \code{rownames(iMatrixTx)}
and \code{tx2geneDF[,txColname]}.}

\item{iDesign}{numeric matrix representing the design matrix for
the experiment design. For example, \code{limma::model.matrix(~0+group)}
will represent each group. Typically, \code{rownames(iDesign)} should
be defined to match the \code{colnames(iMatrix)} even if it requires
extra processing. The \code{colnames(iDesign)} should represent
group names used in \code{rownames(iContrasts)}.}

\item{iContrasts}{numeric matrix representing the contrasts used
in statistical comparisons. This matrix can be generated by
running \code{limma::makeContrasts()} using a format similar to the
following: \code{limma::makeContrasts(contrasts="group1-group2", levels=iDesign)},
see "Examples" for more info.}

\item{cutoffFDR}{numeric value indicating a statistical threshold
on the FDR (adjusted P-value). Values should be between 0 and 1, where
\code{cutoffFDR=1} would impose no threshold on the adjusted P-value.}

\item{cutoffFold}{numeric value indicating the minimum normal space
fold change allowed for statistical hits. For example \code{cutoffFold=2}
would require a 2-fold change, equivalent to log2 fold change >= 1.}

\item{collapseByGene}{logical indicating whether results should be
summarized at the gene level after filtering statistical hits.}

\item{spliceTest}{character value described in \code{limma::topSplice()}
which defines the statistical test to return. The default \code{"t"}
returns the t-test result for each isoform, which is mainly beneficial
because it also includes fold change that can be filtered. The
\code{"F"} returns F-test per gene, and \code{"simes"} returns the per-gene
t-test P-value after Simes adjustment per gene.}

\item{sep}{character value used as a delimiter in output data.frame
colnames, such that each stats is followed by the contrast name,
separated by this delimiter.}

\item{useVoom}{logical indicating whether to apply the \code{limma::voom()}
adjustment prior to running \code{limma::diffSplice()}. This value
should be \code{TRUE} when analyzing count or pseudocount data.}

\item{verbose}{logical indicating whether to print verbose output.}

\item{...}{additional arguments are ignored.}
}
\value{
list containing \code{detectedTx}, \code{detectedTxUse} the detectedTx
values representing genes with multiple transcripts; \code{fit} the initial
model fit; \code{fit2} the contrast model fit; \code{splice} the output from
\code{limma::diffSplice()}; \code{statsDFs} list of data.frame output from
\code{limma::topSplice()} either at the transcript level or the gene level.
}
\description{
Perform differential isoform analysis using diffSplice
}
\details{
This function is intended to be a straightforward method
to call \code{limma::diffSplice()} and return the output of
\code{limma::topSplice()} in helpful formats for downstream
use.

For example, it can be helpful to call this function with and without
the "voom" component, dependent upon whether the input data
contains count data, or TPM abundance. The input data is assumed
to be normalized, and is not adjusted.

Statistical results can be summarized at the gene level, after
applying thresholds for statistical hits in the form of
required adjusted P-value and/or fold change. It may be helpful
to review results per gene, alongside the specific transcript
isoforms which are called statistical hits.

This function may also test the subset of "detected transcripts",
for example based upon the output of \code{defineDetectedTx()}.
In practice, this strategy removes a number of potential hits
which are otherwise not considered to be "detected". The intent is to
filter out potential hits based upon a noise threshold, which
may be below the practical limit of follow-up validation techniques.
Another goal is the removal of a large number of undetected
transcripts which are effectively not tested, prior to
multiple testing correction.

The input data \code{iMatrixTx} should contain rows of data where the
\code{rownames(iMatrixTx)} are represented in \code{tx2geneDF[,txColname]}
in order to link rows to genes, using \code{tx2geneDF[,geneColname]}.
The rows  of \code{iMatrixTx} are expected to contain expression values
per transcript isoform, but may contain alternative measurements
such as: junction expression per gene; exon expression per gene.

Details:

This function provides a wrapper of a basic workflow for differential
isoform analysis, including these basic steps in order:

\describe{
\item{\code{limma:voom()}}{(Optional.) This step is enabled with
the argument \code{useVoom=TRUE} and should only be used when \code{iMatrixTx}
contains count or pseudocount data. When using TPM or FPKM values,
set \code{useVoom=FALSE}.}
\item{\code{limma::lmFit()}}{}
\item{\code{limma::contrasts.fit()}}{}
\item{\code{limma::diffSplice()}}{}
\item{\code{limma::topSplice()}}{This function is called on each contrast
in order to return a list of data.frames.}
}

Note that \code{iMatrixTx} is exponentiated prior to running \code{limma::voom()}
when \code{useVoom=TRUE}, for the purpose of calculating a weights matrix.
The original \code{iMatrixTx} data is used in \code{limma::lmFits()} as-is,
alongside the voom weights. The voom-normalized data is not
used. Therefore, the input data is assumed to be normalized.
}
\examples{
# example for defining iDesign
# first define a vector of sample groups
iGroups <- jamba::nameVector(paste(rep(c("WT", "KO"), each=6),
   rep(c("Control", "Treated"), each=3),
   sep="_"));
iGroups <- factor(iGroups, levels=unique(iGroups));
iGroups;
# next define sample identifiers
iSamples <- names(iGroups);

# given a vector of groups, make iDesign
iDesign <- stats::model.matrix(~0+iGroups);

# It is good practice to rename colnames(iDesign) and rownames(iDesign),
# that is, for the love of all that is good, use colnames and rownames
# that help confirm that these matrices are consistent.
colnames(iDesign) <- levels(iGroups);
rownames(iDesign) <- names(iGroups);
iDesign;

# define contrasts
# the example below includes a two-way contrast, which is a test
# of the pairwise fold changes
iContrasts <- limma::makeContrasts(contrasts=c(
   "WT_Treated-WT_Control", "KO_Treated-KO_Control",
   "(KO_Treated-KO_Control)-(WT_Treated-WT_Control)"),
   levels=iDesign);
iContrasts;

# for validation, verify these constraints:
# - all(rownames(iDesign) == iSamples)
# - colnames(iDesign) == the actual group names
# - all(colnames(iDesign) == rownames(iContrasts))
# you can see which samples are included in each test with crossproduct:
iDesign \%*\% iContrasts;

## Another efficient way to define iDesign and iContrasts:
iDC <- splicejam::groups2contrasts(iGroups, returnDesign=TRUE);
iDesign <- iDC$iDesign;
iContrasts <- iDC$iContrasts;

}
\seealso{
Other jam RNA-seq functions: \code{\link{ale2violin}},
  \code{\link{codonUsage2df}},
  \code{\link{defineDetectedTx}},
  \code{\link{detectedTxInfo}}, \code{\link{dna2codon}},
  \code{\link{groups2contrasts}}, \code{\link{jamCai}},
  \code{\link{makeTx2geneFromGtf}},
  \code{\link{sortSamples}}, \code{\link{tx2ale}}
}
\concept{jam RNA-seq functions}
